#include <stdlib.h>
#include <stdio.h>
#include <stdint.h>
#include <arpa/inet.h>
#include <sys/socket.h>
#include <sys/time.h>
#include <sys/types.h>
#include <unistd.h>

int main(void) {
	struct sockaddr_in direccionServidor;
	direccionServidor.sin_family = AF_INET;
	direccionServidor.sin_addr.s_addr = INADDR_ANY;
	direccionServidor.sin_port = htons(1234);

	int servidor = socket(AF_INET, SOCK_STREAM, 0);

	int activado = 1;
	setsockopt(servidor, SOL_SOCKET, SO_REUSEADDR, &activado, sizeof(activado));

	if (bind(servidor, (void*) &direccionServidor, sizeof(direccionServidor)) != 0) {
		perror("Falló el bind");
		return 1;
	}

	printf("Estoy escuchando\n");
	listen(servidor, 100);

	struct sockaddr_in direccionCliente;
		unsigned int tamanioDireccion;
		int cliente = accept(servidor, (void*) &direccionCliente, &tamanioDireccion);

		printf("Recibí una conexión en %d!!\n", cliente);
		send(cliente, "Te conectaste al servidor del Kernel", 34, 0);

		int bytesArecibir;

			while (1) {
				recv(cliente, bytesArecibir, 4, 0);
				char* mensaje = malloc(bytesArecibir)
				recv(cliente, mensaje, bytesArecibir, 0);

				if (mensaje <= 0) {
					perror("El chabón se desconectó o bla.");
					return 1;
				}

				mensaje[bytesRecibidos] = '\0';
				printf("Me llegaron %d bytes con %s\n", bytesArecibir, mensaje);
			}

			free(mensaje);

	return 0;
}
